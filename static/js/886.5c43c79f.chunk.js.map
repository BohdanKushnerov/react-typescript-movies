{"version":3,"file":"static/js/886.5c43c79f.chunk.js","mappings":"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","sources":["utils/takePathto.ts","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.tsx","../node_modules/react-circular-progressbar/src/constants.ts","../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/buildStyles.ts","components/Progressbar/utils/pathColor.ts","components/Progressbar/utils/trailColor.ts","components/Progressbar/Progressbar.tsx","constants/constants.js","services/fetchTrending.ts","pages/Home/Home.styled.js","pages/Home/Home.tsx"],"sourcesContent":["import { Location } from 'react-router-dom';\n\nfunction takePathto(filmId: number, location: Location) {\n  return location.pathname === '/' ? `movies/${filmId}` : `${filmId}`;\n}\n\nexport default takePathto;\n","import styled from '@emotion/styled';\n\nexport const TrandingList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n\n  max-width: 220px;\n  padding: 8px;\n\n  text-align: center;\n\n  &:hover {\n    background-color: #e5e8e9;\n    border-radius: 5px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.14),\n      0 2px 1px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: black;\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 20px;\n`;\n\nexport const WrapProgressbar = styled.div`\n  position: absolute;\n  top: 303px;\n  left: 5px;\n\n  width: 47px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport takePathto from 'utils/takePathto';\nimport Progressbar from 'components/Progressbar/Progressbar';\nimport {\n  TrandingList,\n  Item,\n  Title,\n  Img,\n  WrapProgressbar,\n} from './FilmList.styled';\n\ntype Film = {\n  id: number;\n  original_title: string;\n  poster_path: string;\n  title: string;\n  vote_average: number;\n};\n\ntype FilmListProps = {\n  films: Film[];\n};\n\nconst FilmList: React.FC<FilmListProps> = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <TrandingList>\n      {films.map(({ id, original_title, vote_average, poster_path, title }) => {\n        return (\n          <Item key={id}>\n            <Link\n              key={id}\n              to={takePathto(id, location)}\n              state={{ from: location }}\n            >\n              <Img src={poster_path} alt={title} width={220} height={330} />\n              <Title>{original_title}</Title>\n            </Link>\n            <WrapProgressbar>\n              <Progressbar\n                value={Math.round(vote_average * 10)}\n                text={`${Math.round(vote_average * 10)}%`}\n              />\n            </WrapProgressbar>\n          </Item>\n        );\n      })}\n    </TrandingList>\n  );\n};\n\nexport default FilmList;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n","const pathColor = (value: number) => {\n  switch (true) {\n    case value >= 75:\n      return '#21d07a';\n    case value <= 75 && value >= 25:\n      return '#d2d531';\n    case value <= 25 && value !== 0:\n      return '#db2360';\n    default:\n      return 'gray';\n  }\n};\n\nexport default pathColor;\n","const trailColor = (value: number) => {\n  switch (true) {\n    case value >= 75:\n      return '#204529';\n    case value <= 75 && value >= 25:\n      return '#423d0f';\n    case value <= 25 && value !== 0:\n      return '#571435';\n    default:\n      return 'gray';\n  }\n};\n\nexport default trailColor;\n","import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport pathColor from './utils/pathColor';\nimport trailColor from './utils/trailColor';\n\ntype ProgressbarProps = {\n  value: number;\n  text: string;\n};\n\nconst Progressbar: React.FC<ProgressbarProps> = ({ value, text }) => {\n  return (\n    <CircularProgressbar\n      value={value}\n      text={text}\n      background\n      backgroundPadding={6}\n      styles={buildStyles({\n        textColor: 'white',\n        pathColor: pathColor(value),\n        trailColor: trailColor(value),\n        backgroundColor: '#081c22',\n        textSize: '35px',\n      })}\n    ></CircularProgressbar>\n  );\n};\n\nexport default Progressbar;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n","import axios from 'axios';\n\ntype Movies = {\n  id: number;\n  original_title: string;\n  vote_average: number;\n  poster_path: string | null;\n  title: string;\n};\n\nasync function fetchTrending(abortController: AbortController) {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=a89ed47e53c22ac07455246c7a19999d',\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }: Movies) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nexport default fetchTrending;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport fetchTrending from 'services/fetchTrending';\nimport FilmList from 'components/FilmList/FilmList';\nimport { Section } from './Home.styled';\nimport Status from 'constants/constants';\n\ninterface FilmsState {\n  id: number;\n  original_title: string;\n  poster_path: string;\n  title: string;\n  vote_average: number;\n}\n\nconst Home: React.FC = () => {\n  const [films, setFilms] = useState<FilmsState[]>([]);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    (async function fetchFilms() {\n      setStatus(Status.PENDING);\n      try {\n        const trandFilms = await fetchTrending(abortController);\n\n        setFilms([...trandFilms]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        console.log(error);\n      }\n    })();\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <Section>\n      {films.length !== 0 && (\n        <>\n          <h2>Tranding today</h2>\n          <FilmList films={films}></FilmList>\n        </>\n      )}\n      {status === Status.REJECTED && (\n        <h2>\n          An error occurred, we could not upload the data, please try reloading\n          the page and try again :)\n        </h2>\n      )}\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["filmId","location","pathname","concat","TrandingList","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","Title","h2","_templateObject3","Img","img","_templateObject4","WrapProgressbar","div","_templateObject5","_ref","films","useLocation","_jsx","children","map","_ref2","id","original_title","vote_average","poster_path","title","_jsxs","Link","to","takePathto","state","from","src","alt","width","height","Progressbar","value","Math","round","text","VIEWBOX_CENTER_X","VIEWBOX_CENTER_Y","Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","PI","gapLength","strokeDasharray","strokeDashoffset","CircularProgressbar","_super","__extends","prototype","getBackgroundPadding","this","props","background","backgroundPadding","getPathRadius","getPathRatio","minValue","maxValue","min","max","render","circleRatio","classes","styles","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","Component","buildStyles","strokeLinecap","textColor","textSize","pathColor","pathTransition","pathTransitionDuration","trailColor","backgroundColor","rotationTransform","undefined","rotationTransformOrigin","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","fill","fontSize","obj","keys","forEach","key","IDLE","PENDING","RESOLVED","REJECTED","_fetchTrending","_asyncToGenerator","_regeneratorRuntime","mark","_callee","abortController","response","wrap","_context","prev","next","axios","get","signal","sent","abrupt","data","results","stop","apply","arguments","_x","Section","section","_useState","useState","_useState2","_slicedToArray","setFilms","_useState3","Status","_useState4","status","setStatus","useEffect","AbortController","_fetchFilms","trandFilms","fetchTrending","_toConsumableArray","t0","console","log","abort","length","_Fragment","FilmList"],"sourceRoot":""}
{"version":3,"file":"static/js/495.a82f8be5.chunk.js","mappings":"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","sources":["constants/constants.js","services/fetchMovieCredits.ts","components/CastList/CastList.styled.js","components/CastList/CastList.tsx","pages/MovieDetails/Cast/Cast.tsx"],"sourcesContent":["const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n","import axios from 'axios';\n\ntype MovieCredits = {\n  id: number;\n  name: string;\n  profile_path: string;\n};\n\nasync function fetchMovieCredits(\n  movieId: string | undefined,\n  abortController: AbortController\n) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.cast.map(({ profile_path, name, id }: MovieCredits) => {\n    return {\n      profile_path: profile_path\n        ? `https://image.tmdb.org/t/p/w138_and_h175_face${profile_path}`\n        : 'https://via.placeholder.com/138x175',\n      name,\n      id,\n    };\n  });\n}\n\nexport default fetchMovieCredits;\n","import styled from '@emotion/styled';\n\nexport const CreditsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const CreditsItem = styled.li`\n  max-width: 138px;\n\n  background-color: #e5e8e9;\n  text-align: center;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.14),\n    0 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n","import { CreditsList, CreditsItem, Name } from './CastList.styled';\n\ntype CastProps = {\n  state: CastItem[];\n};\n\ntype CastItem = {\n  id: number;\n  name: string;\n  profile_path: string;\n};\n\nconst CastList: React.FC<CastProps> = ({ state }) => {\n  return (\n    <CreditsList>\n      {state.map(({ profile_path, name, id }) => {\n        return (\n          <CreditsItem key={id}>\n            <img src={profile_path} alt={name} width={138} height={175} />\n            <Name>{name}</Name>\n          </CreditsItem>\n        );\n      })}\n    </CreditsList>\n  );\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchMovieCredits from 'services/fetchMovieCredits';\nimport CastList from 'components/CastList/CastList';\nimport Status from 'constants/constants';\n\ntype CastState = {\n  id: number;\n  name: string;\n  profile_path: string;\n};\n\nconst Cast: React.FC = () => {\n  const [castState, setCastState] = useState<CastState[]>([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    (async function fetchCast() {\n      setStatus(Status.PENDING);\n      try {\n        const moviesCredits = await fetchMovieCredits(movieId, abortController);\n\n        setCastState([...moviesCredits]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        console.log(error);\n      }\n    })();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <section>\n      {status === Status.RESOLVED && <CastList state={castState}></CastList>}\n      {!castState.length && status === Status.RESOLVED && (\n        <h2>We don't have any cast added to this movie</h2>\n      )}\n      {status === Status.REJECTED && (\n        <h2>\n          An error occurred, we could not upload the data, please try reloading\n          the page and try again :)\n        </h2>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n"],"names":["IDLE","PENDING","RESOLVED","REJECTED","_fetchMovieCredits","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieId","abortController","response","wrap","_context","prev","next","axios","get","concat","signal","sent","abrupt","data","cast","map","_ref","profile_path","name","id","stop","apply","arguments","_x","_x2","CreditsList","styled","ul","_templateObject","_taggedTemplateLiteral","CreditsItem","li","_templateObject2","Name","p","_templateObject3","state","_jsx","children","_ref2","_jsxs","src","alt","width","height","_useState","useState","_useState2","_slicedToArray","castState","setCastState","_useState3","Status","_useState4","status","setStatus","useParams","useEffect","AbortController","_fetchCast","moviesCredits","fetchMovieCredits","_toConsumableArray","t0","console","log","abort","CastList","length"],"sourceRoot":""}